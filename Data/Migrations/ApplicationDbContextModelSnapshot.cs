// <auto-generated />
using System;
using GestionFacturation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionFacturation.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("GestionFacturation.Data.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<float>("PrixTTC")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Categorie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nom")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .HasColumnType("TEXT");

                    b.Property<int>("CodePostal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ville")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Devis", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArticlesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomClient")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("ArticlesId");

                    b.ToTable("Deviss");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateGeneration")
                        .HasColumnType("TEXT");

                    b.Property<int>("DevisId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomClient")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaiementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProduitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Statut")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("PrixTTC")
                        .HasColumnType("REAL");

                    b.Property<string>("StatutFacture")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Produit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("categorieid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("stockid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("categorieid");

                    b.HasIndex("stockid");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Stock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("quantite")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Devis", b =>
                {
                    b.HasOne("GestionFacturation.Data.Models.Article", "Articles")
                        .WithMany()
                        .HasForeignKey("ArticlesId");
                });

            modelBuilder.Entity("GestionFacturation.Data.Models.Produit", b =>
                {
                    b.HasOne("GestionFacturation.Data.Models.Categorie", "categorie")
                        .WithMany()
                        .HasForeignKey("categorieid");

                    b.HasOne("GestionFacturation.Data.Models.Stock", "stock")
                        .WithMany()
                        .HasForeignKey("stockid");
                });
#pragma warning restore 612, 618
        }
    }
}
